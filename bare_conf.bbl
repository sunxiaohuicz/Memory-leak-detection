% Generated by IEEEtran.bst, version: 1.12 (2007/01/11)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{AJ06}
A.~Aggarwal and P.~Jalote, ``Integrating static and dynamic analysis for
  detecting vulnerabilities,'' in \emph{Proc.\ 30th Annual International
  Computer Software and Applications Conference - {COMPSAC}}, 2006, pp.
  343--350.

\bibitem{KJMP06}
H.~Kim, J.~A. Joao, and O.~Mutlu, ``Diverge-merge processor {(DMP):} dynamic
  predicated execution of complex control-flow graphs based on frequently
  executed paths,'' in \emph{Proc.\ 39th Annual {IEEE/ACM} International
  Symposium on Microarchitecture - {MICRO}}, 2006, pp. 53--64.

\bibitem{LCW13}
M.~Li, Y.~Chen, L.~Wang, and G.~H. Xu, ``Dynamically validating static memory
  leak warnings,'' in \emph{Proc.\ International Symposium on Software Testing
  and Analysis, {ISSTA}}, 2013, pp. 112--122.

\bibitem{SYX12}
Y.~Sui, D.~Ye, and J.~Xue, ``Static memory leak detection using full-sparse
  value-flow analysis,'' in \emph{Proc.\ International Symposium on Software
  Testing and Analysis - {ISSTA}}, 2012, pp. 254--264.

\bibitem{XA05}
Y.~Xie and A.~Aiken, ``Context- and path-sensitive memory leak detection,'' in
  \emph{Proc.\ 10th European Software Engineering Conference held jointly with
  13th {ACM} {SIGSOFT} International Symposium on Foundations of Software
  Engineering}, 2005, pp. 115--125.

\bibitem{ZW01}
J.~Zhang and X.~Wang, ``A constraint solver and its application to path
  feasibility analysis,'' \emph{International Journal of Software Engineering
  and Knowledge Engineering}, no.~2, pp. 139--156, 2001.

\bibitem{OR06}
M.~Orlovich and R.~Rugina, ``Memory leak analysis by contradiction,'' in
  \emph{Proc.\ 13th International Symposium on Static Analysis - {SAS}}, 2006,
  pp. 405--424.

\bibitem{J14}
X.-J. Ji, ``Research on the static analysis of resource leak fault,'' Ph.D.
  dissertation, College of Computer and Control Engineering, Nankai University,
  Tianjin, China, 2014,
  http://cdmd.cnki.com.cn/Article/CDMD-10055-1015528928.htm, accessed at 25
  June 2017.

\bibitem{EL02}
D.~Evans and D.~Larochelle, ``Improving security using extensible lightweight
  static analysis,'' \emph{IEEE Software}, vol.~19, no.~1, pp. 42--51, 2002.

\bibitem{XZX11}
Z.~Xu, J.~Zhang, and Z.~Xu, ``Memory leak detection based on memory state
  transition graph,'' in \emph{Proc.\ Asia-Pacific Software Engineering
  Conference - {APSEC}}, 2011, pp. 33--40.

\bibitem{XZX15}
Z.~Xu and J.~Zhang, ``Melton: a practical and precise memory leak detection
  tool for c programs,'' \emph{Frontiers of Computer Science}, no.~1, pp.
  34--54, 2015.

\bibitem{HL06}
D.~L. Heine and M.~S. Lam, ``Static detection of leaks in polymorphic
  containers,'' in \emph{Proc.\ International Conference on Software
  Engineering - {ICSE}}, 2006, pp. 252--261.

\bibitem{YXYR14}
D.~Yan, G.~Xu, S.~Yang, and A.~Rountev, ``Leakchecker: Practical static memory
  leak detection for managed languages,'' in \emph{Proc.\ International
  Symposium on Code Generation and Optimization - {CGO}}, 2014, pp. 87--97.

\bibitem{DWC12}
L.~Dong, J.~Wang, and L.~Chen, ``Modular heap abstraction-based memory leak
  detection for heap-manipulating programs,'' in \emph{Proc.\ 19th Asia-Pacific
  Software Engineering Conference - {APSEC}}, 2012, pp. 20--29.

\bibitem{XR08}
G.~Xu and A.~Rountev, ``Precise memory leak detection for java software using
  container profiling,'' in \emph{Proc.\ 30th international conference on
  Software engineering - {ICSE}}, 2008, pp. 151--160.

\bibitem{LXL15}
Z.~Liu, B.~Xu, and D.~Liang, ``Semantics-based memory leak detection for c
  programs,'' in \emph{Proc.\ International Conference on Fuzzy Systems and
  Knowledge Discovery - (FSKD)}, 2015, pp. 2283--2287.

\bibitem{KFM13}
J.~C. Kleinsorge, H.~Falk, and P.~Marwedel, ``Simple analysis of partial
  worst-case execution paths on general control flow graphs,'' in \emph{Proc.\
  ACM International Conference on Embedded Software - {EMSOFT}}.

\bibitem{LLQ16}
X.~Li, Y.~Liang, and H.~Q. etc., ``Symbolic execution of complex program driven
  by machine learning based constraint solving,'' in \emph{Proc.\ Conference on
  Automated Software Engineering - {ASE}}, 2016, pp. 554--559.

\bibitem{MGDD14}
J.~Mohapatra, S.~Gid, K.~Debasis, and S.~K. Das, ``Slicing complex c++ program
  dynamically,'' in \emph{Proc.\ International Conference on Advanced
  Communication Control and Computing Teclmologies - {ICACCCT}}, 2014, pp.
  1765--1770.

\bibitem{KK12}
B.~Katzmarski and R.~Koschke, ``Program complexity metrics and programmer
  opinions,'' in \emph{Proc.\ 20th International Conference on Program
  Comprehension - {ICPC}}, 2012, pp. 17--26.

\bibitem{DG14}
D.~Dai and L.~V. Gool, ``Ensemble projection for semi-supervised image
  classification,'' in \emph{Proc.\ International Conference on Computer Vision
  - {ICCV}}, 2014, pp. 2072--2079.

\bibitem{HWS15}
Z.~Huang, R.~Wang, and S.~Shan, ``Projection metric learning on grassmann
  manifold with application to video based face recognition,'' in \emph{Proc.\
  Conference on Computer Vision and Pattern Recognition - {CVPR}}, 2015, pp.
  140--149.

\bibitem{NL10}
D.~J. Nott and C.~Leng, ``Bayesian projection approaches to variable selection
  in generalized linear models,'' \emph{Computational Statistics {\&} Data
  Analysis}, vol.~54, no.~12, pp. 3227--3241, 2010.

\bibitem{D94}
K.~Davis, ``Projection-based program analysis,'' Ph.D. dissertation, Department
  of Computing. University of Glasgow, Glasgow, Scotland, UK, 1994.

\end{thebibliography}
