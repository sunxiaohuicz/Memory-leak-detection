% Generated by IEEEtran.bst, version: 1.12 (2007/01/11)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{AJ06}
A.~Aggarwal and P.~Jalote, ``Integrating static and dynamic analysis for
  detecting vulnerabilities,'' in \emph{Proc.\ 30th Annual International
  Computer Software and Applications Conference - {COMPSAC}}, 2006, pp.
  343--350.

\bibitem{SYX12}
Y.~Sui, D.~Ye, and J.~Xue, ``Static memory leak detection using full-sparse
  value-flow analysis,'' in \emph{Proc.\ the 11th Annual International
  Symposium on Software Testing and Analysis - {ISSTA}}, 2012, pp. 254--264.

\bibitem{SLR077}
S.~Cherem, L.~Princehouse, and R.~Rugina, ``Practical memory leak detection
  using guarded value-flow analysis,'' in \emph{Proc.\ 28thACM SIGPLAN
  Conference on Programming Language Design and Implementation - {PLDI}},
  480-491, p. 2007.

\bibitem{OR06}
M.~Orlovich and R.~Rugina, ``Memory leak analysis by contradiction,'' in
  \emph{Proc.\ 13th International Symposium on Static Analysis - {SAS}}, 2006,
  pp. 405--424.

\bibitem{DD02}
D.~Evans and D.~Larochelle, ``Improving security using extensible lightweight
  static analysis,'' \emph{IEEE Software}, pp. 42--51, 2002.

\bibitem{J14}
X.-J. Ji, ``Research on the static analysis of resource leak fault,'' Ph.D.
  dissertation, College of Computer and Control Engineering, Nankai University,
  Tianjin, China, 2014.

\bibitem{XZX11}
Z.~Xu, J.~Zhang, and Z.~Xu, ``Memory leak detection based on memory state
  transition graph,'' in \emph{Proc.\ the 18th Asia-Pacific Software
  Engineering Conference - {APSEC}}, 2011, pp. 33--40.

\bibitem{XZX15}
Z.~Xu and J.~Zhang, ``Melton: a practical and precise memory leak detection
  tool for c programs,'' \emph{Frontiers of Computer Science}, no.~1, pp.
  34--54, 2015.

\bibitem{HL06}
D.~L. Heine and M.~S. Lam, ``Static detection of leaks in polymorphic
  containers,'' in \emph{Proc.\ the 28th International Conference on Software
  Engineering - {ICSE}}, 2006, pp. 252--261.

\bibitem{YXYR14}
D.~Yan, G.~Xu, S.~Yang, and A.~Rountev, ``Leakchecker: Practical static memory
  leak detection for managed languages,'' in \emph{Proc.\ the 12th
  International Symposium on Code Generation and Optimization - {CGO}}, 2014,
  pp. 87--97.

\bibitem{KJMP06}
H.~Kim, J.~A. Joao, and O.~Mutlu, ``Diverge-merge processor {(DMP):} dynamic
  predicated execution of complex control-flow graphs based on frequently
  executed paths,'' in \emph{Proc.\ 39th Annual {IEEE/ACM} International
  Symposium on Microarchitecture - {MICRO}}, 2006, pp. 53--64.

\bibitem{KFM13}
J.~C. Kleinsorge, H.~Falk, and P.~Marwedel, ``Simple analysis of partial
  worst-case execution paths on general control flow graphs,'' in \emph{Proc.\
  the 11th ACM International Conference on Embedded Software - {EMSOFT}}, 2013,
  p.~16.

\bibitem{KK12}
B.~Katzmarski and R.~Koschke, ``Program complexity metrics and programmer
  opinions,'' in \emph{Proc.\ 20th International Conference on Program
  Comprehension - {ICPC}}, 2012, pp. 17--26.

\bibitem{D94}
K.~Davis, ``Projection-based program analysis,'' Ph.D. dissertation, Department
  of Computing. University of Glasgow, Glasgow, Scotland, UK, 1994.

\end{thebibliography}
